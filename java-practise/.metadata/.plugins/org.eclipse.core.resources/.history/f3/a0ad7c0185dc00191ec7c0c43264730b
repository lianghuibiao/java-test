package practise;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;

import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;



public class PractiseThird extends JFrame {
	
	//Image map=Toolkit.getDefaultToolkit().getImage("planeImg/WOOD.GIF");
	Image map=Toolkit.getDefaultToolkit().getImage("planeImg/beijing.jpg");
	Image self=Toolkit.getDefaultToolkit().getImage("planeImg/self.gif");
	/*
	 * 
	 * 加载画布背景利用背景向上移动
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 * */
	
	//窗体函数
	double y=490;
	public static Image img(String a) {
		return Toolkit.getDefaultToolkit().getImage(a);
	}
	
	public void paint(Graphics g) {
		//加载棋盘 
		
		
		//int t=0;
		//int b=0;
		//加载第一排的棋子
		Image bull=img("planeImg/bullet.jpg");
		g.drawImage(map,0,0,null);
		g.drawImage(bull,200,(int)y,null);
		g.drawImage(self,160,500,null);

	if (y<100) {
		
		g.drawImage(bull,200,(int)y,null);
		if(y<450) {
			
			g.drawImage(bull,200,(int)y,null);
		}
		
		
		y=500;
	//	repaint();
	}
	
	
	boolean b=true;
	
	y=y-10;

			
		}
	private myPanle1 myPanle;   
	void frame() {
		
		
		
		   myPanle = new myPanle1();
		      this.add(myPanle);
		      this.addKeyListener(myPanle);
		setVisible(true);
		setSize(400,600);
		setLocation(400, 200);
		 
		getContentPane().setBackground(Color.red); 
		while(true) {
			repaint();
			try {
				//四十毫秒
				
				Thread.sleep(40);  //一秒20次
			
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
		}
		
	}
	
	
	
	
	
	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		 JPanel jp=new JPanel();
      PractiseThird jf=new PractiseThird();
   
      jf.frame();
      //jf.setBackground(Color.blue);
      jf.add(jp);
      jp.setSize(400,600);
      jp.setBackground(Color.blue);
	}

}
@SuppressWarnings("serial")
class myPanle extends JPanel implements KeyListener{

    @Override
    public void keyTyped(KeyEvent e) {
        // TODO Auto-generated method stub
    	 if (e.getKeyCode()==37){
             System.out.println("k格");
         } 
    }

    @Override
    public void keyPressed(KeyEvent e) {
        
           switch (e.getKeyCode()) {
		case 37:
			System.out.println("aa");
			break;
case 38:
	System.out.println("aa");
			break;
case 39:
	System.out.println("aa");
	break;
case 40:
	System.out.println("aa");
	break;
		
		}
       
    }

    @Override
    public void keyReleased(KeyEvent e) {
    	 if (e.getKeyCode()==37){
             System.out.println("k格");
         } 
    }

}